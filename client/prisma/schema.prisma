// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    Username               String      @id
    Email                  String      @unique
    UserPage               UserPage?   @relation("owner")
    Premium                Boolean     @default(false)
    UserPageId             String
    AdminPermisionStreams  UserPage[]  @relation("Admins")
    BannedPermisionStreams UserPage[]  @relation("Banned")
    Following              Following[]
}

model UserPage {
    id           String      @id
    Owner        User        @relation("owner", fields: [id], references: [Username])
    Viewers      Int
    AllTimeViews Int
    Genre        Genres
    Title        String
    Admins       User[]      @relation("Admins")
    Banned       User[]      @relation("Banned")
    Followers    Following[]

    @@index([id])
}

enum Genres {
    POP
    ROCK
}

model Following {
    id             String        @id
    User           User          @relation(fields: [id], references: [Username])
    Following      UserPage      @relation(fields: [userPageId], references: [id])
    userPageId     String
    Subscription   subscription? @relation(fields: [subscriptionId], references: [id])
    TierStart      DateTime?
    subscriptionId String?

    @@index([id])
    @@index([userPageId])
    @@index([subscriptionId])
}

model subscription {
    id        String      @id
    Tier      Tier
    StartTime DateTime
    Following Following[]
}

enum Tier {
    TIER1
    TIER2
    TIER3
}
